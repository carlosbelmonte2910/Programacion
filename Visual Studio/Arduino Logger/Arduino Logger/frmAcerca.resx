<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAAABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABifUAA1BvgAINI4AAAAAAAAMjgAKPK4ADj6fAAAVeQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABNAAAA/wAABpULAAVbCAAAXQAAAKQAAAqNCwACYAlaadoAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAG4AGjC4AAAAAAEePcYhLHbajRdcr20AAAoIABiREB1pxoEscMV/EiCKFf//
        /wAIDoEAAAAgAAAAAAAAAckAKYv/ABgaxQseYtRXHlG2iVWj5dotg8TAMzI+aCY0VHM3ldHWUZXYzBhU
        s4EeXLVLAAA9BiNz5wAAAAAAAADJBBVOzCkXRrZnTJfizDKAzeZXndjnTY/A9E9QXvFDSl7yUqLK902T
        0eI2j9DrRobNvBFCp18WS6QhAAAAAgsRyxVBguWaMoXU41GT2OZIldj6SXe4+2qBnP9fXmT/VVZd/1N1
        kf82bKr7T6XX+0eFzOE5kdfhO3PDfgAAIQkDB7oIYpjmjEuj5P1EhM7+d6DF/3d6jP9ZWVr/MzMz/zc3
        Nv9RUFT/VVtv/1iMr/83e8L+Vq/h91J9vm4AADEBHxZ7E1aO1KRtsd/+gI+2/3x+h/9VVVT/PDw8/zIy
        Mv8uLi7/NTU1/05NTf9YW2f/T2WK/1uozvw+bqWLBQUDClFPVSqFkKjNjZis/2tqbP9CQkH/RkZG/1JS
        Uv9PT0//RUVF/zw8PP83Nzf/QkJA/1lZXP9YZXn/PkdYtA4OCxtEREMXcXBvj2tqae5GRkb/PT09/0hI
        SP9UVFT/Wlpa/1lZWf9SUlL/RUVF/zo7O/9MS0v/YmFg5UdGRHQJCQkMAAAAAR4eHhJMTExkYGBgy19f
        X/tYWFj/W1tb/2BgYP9hYWH/Xl5e/11dXf9gYGD3XV1du0lJSVEmJicLAAAAAC4uLgBHR0cAAAAABEVF
        RTRkZGSdc3Nz7XNzc/9vb2//b29v/3R0dP9ycnLkX19fiT4+PiYAAAABPT09AAAAAAAAAAAAAAAAABkZ
        GQDCwsIAKSkpEllZWWF7e3vLiYmJ+4eHh/d3d3e7U1NTThsbGwtycnIABgYGAAAAAAAAAAAAAAAAAAAA
        AAAAAAAADAwMAE1NTQAAAAADS0tLNGtra5ZoaGiGQEBAJgAAAAFGRkYAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACAgIANDQ0AAKCgoMAAAACXp6egAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGBgAPj4+ADo6OgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAP//AAD7vwAA8Y8AAOAHAACAAwAAgAMAAIABAACAAQAAgAMAAOAHAADwDwAA/D8AAP5/
        AAD//wAA//8AAA==
</value>
  </data>
</root>